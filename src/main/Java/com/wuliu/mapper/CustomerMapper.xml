<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliu.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.wuliu.entity.Customer" >
    <id column="customerID" property="customerid" jdbcType="INTEGER" />
    <result column="customerName" property="customername" jdbcType="VARCHAR" />
    <result column="contactName" property="contactname" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <!--<result column="paidID" property="paidtype.paidid" jdbcType="INTEGER" />-->
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <!--<result column="areaID" property="area.areaid" jdbcType="INTEGER" />-->
    <!--<result column="customerTypeID" property="customertype.customertypeid" jdbcType="INTEGER" />-->
    <result column="factMoney" property="factmoney" jdbcType="DECIMAL" />
    <result column="paidMoney" property="paidmoney" jdbcType="DECIMAL" />
   <!-- &lt;!&ndash;Area数据&ndash;&gt;
    <association property="area" javaType="com.wuliu.entity.Area">
      <id column="areaID" property="area.areaid" jdbcType="INTEGER" />
      <result column="areaName" property="areaname" jdbcType="VARCHAR" />
    </association>

    &lt;!&ndash;Paidtype数据&ndash;&gt;
    <association property="paidtype" javaType="com.wuliu.entity.Paidtype">
      <id column="paidID" property="paidtype.paidid" jdbcType="INTEGER" />
      <result column="paidName" property="paidname" jdbcType="VARCHAR" />
    </association>

    &lt;!&ndash;Customertype数据&ndash;&gt;
    <association property="customertype" javaType="com.wuliu.entity.Customertype">
      <id column="customerTypeID" property="customertype.customertypeid" jdbcType="INTEGER" />
      <result column="customerTypeName" property="customertypename" jdbcType="VARCHAR" />
    </association>-->

    <!--Area数据分步式查询-->
    <association property="area" column="areaID" select="com.wuliu.mapper.AreaMapper.selectByPrimaryKey" />



    <!--Paidtype数据分步式查询-->
    <association property="paidtype"  column="paidID" select="com.wuliu.mapper.PaidtypeMapper.selectByPrimaryKey" javaType="com.wuliu.entity.Paidtype">
      <id column="paidID" property="paidtype.paidid" jdbcType="INTEGER" />
      <result column="paidName" property="paidname" jdbcType="VARCHAR" />
    </association>

    <!--Customertype数据分步式查询-->
    <association property="customertype"  column="customerTypeID" select="com.wuliu.mapper.CustomertypeMapper.selectByPrimaryKey" javaType="com.wuliu.entity.Customertype">
      <id column="customerTypeID" property="customertype.customertypeid" jdbcType="INTEGER" />
      <result column="customerTypeName" property="customertypename" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >

      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    customerID, customerName, contactName, phone, paidID, addr, areaID, customerTypeID,
    factMoney, paidMoney
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wuliu.entity.CustomerExample" >
        select
      <include refid="Base_Column_List" />
        from customer
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
      <if test="currPage != null and limit != null">
        limit ${currPage},${limit}
      </if>
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from customer
    where customerID = #{customerid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where customerID = #{customerid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wuliu.entity.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wuliu.entity.Customer" >
    insert into customer (customerID, customerName, contactName, 
      phone, paidID, addr, 
      areaID, customerTypeID, factMoney, 
      paidMoney)
    values (#{customerid,jdbcType=INTEGER}, #{customername,jdbcType=VARCHAR}, #{contactname,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{paidtype.paidid,jdbcType=INTEGER}, #{addr,jdbcType=VARCHAR},
      #{area.areaid,jdbcType=INTEGER}, #{customertype.customertypeid,jdbcType=INTEGER}, #{factmoney,jdbcType=DECIMAL},
      #{paidmoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.wuliu.entity.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        customerID,
      </if>
      <if test="customername != null" >
        customerName,
      </if>
      <if test="contactname != null" >
        contactName,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="paidtype.paidid != null" >
        paidID,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="area.areaid != null" >
        areaID,
      </if>
      <if test="customertype.customertypeid != null" >
        customerTypeID,
      </if>
      <if test="factmoney != null" >
        factMoney,
      </if>
      <if test="paidmoney != null" >
        paidMoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="customername != null" >
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="contactname != null" >
        #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="paidtype.paidid != null" >
        #{paidtype.paidid,jdbcType=INTEGER},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="area.areaid != null" >
        #{area.areaid,jdbcType=INTEGER},
      </if>
      <if test="customertype.customertypeid != null" >
        #{customertype.customertypeid,jdbcType=INTEGER},
      </if>
      <if test="factmoney != null" >
        #{factmoney,jdbcType=DECIMAL},
      </if>
      <if test="paidmoney != null" >
        #{paidmoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wuliu.entity.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.customerid != null" >
        customerID = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.customername != null" >
        customerName = #{record.customername,jdbcType=VARCHAR},
      </if>
      <if test="record.contactname != null" >
        contactName = #{record.contactname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.paidtype.paidid != null" >
        paidID = #{record.paidtype.paidid,jdbcType=INTEGER},
      </if>
      <if test="record.addr != null" >
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.area.areaid != null" >
        areaID = #{record.area.areaid,jdbcType=INTEGER},
      </if>
      <if test="record.customertype.customertypeid != null" >
        customerTypeID = #{record.customertype.customertypeid,jdbcType=INTEGER},
      </if>
      <if test="record.factmoney != null" >
        factMoney = #{record.factmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.paidmoney != null" >
        paidMoney = #{record.paidmoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set customerID = #{record.customerid,jdbcType=INTEGER},
      customerName = #{record.customername,jdbcType=VARCHAR},
      contactName = #{record.contactname,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      paidID = #{record.paidtype.paidid,jdbcType=INTEGER},
      addr = #{record.addr,jdbcType=VARCHAR},
      areaID = #{record.area.areaid,jdbcType=INTEGER},
      customerTypeID = #{record.customertype.customertypeid,jdbcType=INTEGER},
      factMoney = #{record.factmoney,jdbcType=DECIMAL},
      paidMoney = #{record.paidmoney,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuliu.entity.Customer" >
    update customer
    <set >
      <if test="customername != null" >
        customerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="contactname != null" >
        contactName = #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="paidtype.paidid != null" >
        paidID = #{paidtype.paidid,jdbcType=INTEGER},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="area.areaid != null" >
        areaID = #{area.areaid,jdbcType=INTEGER},
      </if>
      <if test="customertype.customertypeid != null" >
        customerTypeID = #{customertype.customertypeid,jdbcType=INTEGER},
      </if>
      <if test="factmoney != null" >
        factMoney = #{factmoney,jdbcType=DECIMAL},
      </if>
      <if test="paidmoney != null" >
        paidMoney = #{paidmoney,jdbcType=DECIMAL},
      </if>
    </set>
    where customerID = #{customerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuliu.entity.Customer" >
    update customer
    set customerName = #{customername,jdbcType=VARCHAR},
      contactName = #{contactname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      paidID = #{paidtype.paidid,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR},
      areaID = #{area.areaid,jdbcType=INTEGER},
      customerTypeID = #{customertype.customertypeid,jdbcType=INTEGER},
      factMoney = #{factmoney,jdbcType=DECIMAL},
      paidMoney = #{paidmoney,jdbcType=DECIMAL}
    where customerID = #{customerid,jdbcType=INTEGER}
  </update>
</mapper>